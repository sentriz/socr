name: Nightly Release
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch: {}
jobs:
  test-frontend:
    name: Lint and test frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Check
        run: npm run check
  test-backend:
    name: Lint and test backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Install dependencies
        run: |
          sudo apt update -qq
          sudo apt install -y -qq build-essential libtesseract-dev libleptonica-dev libavcodec-dev libavutil-dev libavformat-dev libswscale-dev libgraphicsmagick1-dev
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.40.0
          skip-go-installation: true
      - name: Test
        run: go test ./...
  build-release:
    name: Build and release Docker image
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master
      - name: Login into DockerHub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Login into GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Generate short hash
        run: |
          _short_hash=${{ github.sha }}
          echo "SHORT_HASH=${_short_hash:0:7}" >> $GITHUB_ENV
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.SHORT_HASH }}
            ghcr.io/${{ github.repository }}:nightly
            ${{ github.repository }}:${{ env.SHORT_HASH }}
            ${{ github.repository }}:nightly
