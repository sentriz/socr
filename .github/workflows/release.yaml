name: release
on:
  push:
    branches:
      - master
jobs:
  test:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt update -qq
          sudo apt install -y -qq libtesseract-dev libleptonica-dev
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
      - name: Test
        run: go test ./...
  release-please:
    name: Run Release Please
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup release please
        uses: google-github-actions/release-please-action@v2
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          changelog-path: CHANGELOG.md
          package-name: socr
  build-release:
    name: Build, tag, and publish Docker image
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login into GitHub Container Registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Build Docker image
        run: |
          docker build \
          -t "ghcr.io/${GITHUB_REPOSITORY}:${{ needs.release-please.outputs.tag_name }}" \
          -t "ghcr.io/${GITHUB_REPOSITORY}:latest" \
          .
      - name: Release Docker image
        run: |
          docker push "ghcr.io/${GITHUB_REPOSITORY}:${{ needs.release-please.outputs.tag_name }}"
          docker push "ghcr.io/${GITHUB_REPOSITORY}:latest"
